
{"1":{"program": "\n# Return a bool, Are there any small refrigerators?\ndef execute_command(image) -> bool:\n    image_patch = ImagePatch(image)\n    small_refrigerator_patches = image_patch.find(\"refrigerator\")\n    for small_refrigerator_patch in small_refrigerator_patches:\n        if 'yes' == small_refrigerator_patch.simple_query(\"Is the refrigerator small?\"):\n            return True\n    return False", "question": "Return a bool, Are there any small refrigerators?"},
"2":{"program": "\n# Return a str, What is the name of the device above the desk?\ndef execute_command(image) -> str:\n    image_patch = ImagePatch(image)\n    desk_patches = image_patch.find(\"desk\")\n    desk_patch = desk_patches[0]\n    device_patches = image_patch.find(\"device\")\n    for device_patch in device_patches:\n        if device_patch.vertical_center > desk_patch.vertical_center:\n            return device_patch.simple_query(\"What is the name of this device?\")\n    return image_patch.simple_query(\"Return a str, What is the name of the device above the desk?\")", "question": "Return a str, What is the name of the device above the desk?"},
"3":{"program": "\n# Return a str, What material is the device above the desk made of?\ndef execute_command(image) -> str:\n    image_patch = ImagePatch(image)\n    desk_patches = image_patch.find('desk')\n    desk_patch = desk_patches[0]\n    device_patches = image_patch.find('device')\n    for device_patch in device_patches:\n        if device_patch.vertical_center > desk_patch.vertical_center:\n            return device_patch.simple_query(\"What is the material that this device is made of?\")\n    return image_patch.simple_query(\"Return a str, What material is the device above the desk made of?\")", "question": "Return a str, What material is the device above the desk made of?"},
"4": {"program": "\n# Return a float number, what is the horizontal center of the largest vehicle?\ndef execute_command(image) -> float:\n    image_patch = ImagePatch(image)\n    large_vehicle_patches = image_patch.find('large vehicle')\n    # Sort by size, then get position\n    large_vehicle_patches.sort(key=lambda x: x.width * x.height, reverse=True)\n    return large_vehicle_patches[0].horizontal_center", "question": "Return a float number, what is the horizonal center of the largest vehicle?"},
"5": {"program": "\n# Return a float number, what is the horizontal center of the vehicle parked along the street?\ndef execute_command(image) -> float:\n    image_patch = ImagePatch(image)\n    vehicle_patches = image_patch.find('vehicle')\n    street_patches = image_patch.find('street')\n    street_patch = street_patches[0]\n    vehicle_centers = [vehicle.horizontal_center for vehicle in vehicle_patches]\n    street_center = street_patch.horizontal_center\n    closest_vehicle_center = min(vehicle_centers, key=lambda x: abs(x - street_center))\n    return closest_vehicle_center", "question": "Return a float number, what is the horizonal center of the vehicle parked along the street?"},
"6": {"program": "\n# Return an ImagePatch, what is the tennis racket that is to the right of the athlete?\ndef execute_command(image) -> ImagePatch:\n    image_patch = ImagePatch(image)\n    athlete_patch = image_patch.find('athlete')[0]\n    tennis_racket_patches = image_patch.find('tennis racket')\n    for tennis_racket_patch in tennis_racket_patches:\n        if tennis_racket_patch.horizontal_center > athlete_patch.horizontal_center:\n            return tennis_racket_patch\n    # If not found, always return the original image_patch\n    return image_patch", "question": "Return an ImagePatch, what is the tennis racket that is to the right of the athlete?"},
"7" : {"program": "\n# Return an ImagePatch, what is the appliance below the cabinets?\ndef execute_command(image) -> ImagePatch:\n    image_patch = ImagePatch(image)\n    cabinet_patches = image_patch.find('cabinet')\n    if len(cabinet_patches) == 0:\n        return image_patch\n    cabinet_patch = cabinet_patches[0]\n    appliance_patches = image_patch.find('appliance')\n    for appliance_patch in appliance_patches:\n        if appliance_patch.vertical_center < cabinet_patch.vertical_center:\n            return appliance_patch\n    return image_patch", "question": "Return an ImagePatch, what is the appliance below the cabinets?"},
"8" : {"program": "\n# Return a float, what is the horizontal center of the girl that is wearing a shirt?\ndef execute_command(image) -> float:\n    image_patch = ImagePatch(image)\n    girl_patches = image_patch.find('girl')\n    for girl_patch in girl_patches:\n        if girl_patch.simple_query(\"Is this girl wearing a shirt?\") == 'yes':\n            return girl_patch.horizontal_center\n    return image_patch.horizontal_center", "question": "Return a float, what is the horizonal center of the girl that is wearing a shirt?"},
"9" : {"program": "\n# Return a float, what is the horizontal center of the white chair?\ndef execute_command(image) -> float:\n    image_patch = ImagePatch(image)\n    chair_patches = image_patch.find('chair')\n    for chair_patch in chair_patches:\n        if chair_patch.simple_query(\"Is this chair white?\") == 'yes':\n            return chair_patch.horizontal_center\n    return image_patch.horizontal_center", "question": "Return a float, what is the horizonal center of the white chair?"},
"10": {"program": "\n# Return an ImagePatch, what is the pink article of clothing?\ndef execute_command(image) -> ImagePatch:\n    image_patch = ImagePatch(image)\n    pink_article_patches = image_patch.find('pink article')\n    if len(pink_article_patches) == 0:\n        return image_patch\n    for pink_article_patch in pink_article_patches:\n        if pink_article_patch.simple_query(\"Is this an article of clothing?\") == 'yes':\n            return pink_article_patch\n    return pink_article_patches[0]", "question": "Return an ImagePatch, what is the pink article of clothing?"},
"11": {"program": "\n# Return an ImagePatch, what is the standing giraffe?\ndef execute_command(image) -> ImagePatch:\n    image_patch = ImagePatch(image)\n    giraffe_patch = image_patch.find('standing giraffe')[0]\n    return giraffe_patch", "question": "Return an ImagePatch, what is the standing giraffe?"},
"12": {"program": "\n# Return a str, name one animal species in this image\ndef execute_command(image) -> str:\n    image_patch = ImagePatch(image)\n    animal_patch = image_patch.find('animal')[0]\n    return animal_patch.simple_query(\"What is the species of this animal?\")", "question": "Return a str, name one animal species in this image"},
"13": {"program": "\n# Return an ImagePatch, what is the girl that is to the left of the tennis racket\ndef execute_command(image) -> ImagePatch:\n    image_patch = ImagePatch(image)\n    tennis_racket_patch = image_patch.find('tennis racket')[0]\n    girl_patches = image_patch.find('girl')\n    if len(girl_patches) == 0:\n        return image_patch\n    for girl_patch in girl_patches:\n        if girl_patch.horizontal_center < tennis_racket_patch.horizontal_center:\n            return girl_patch\n    return girl_patches[0]", "question": "Return an ImagePatch, what is the girl that is to the left of the tennis racket"},
"14": {"program": "\n# Return an ImagePatch, what is the toy that is to the right of the baby animal?\ndef execute_command(image) -> ImagePatch:\n    image_patch = ImagePatch(image)\n    baby_animal_patch = image_patch.find('baby animal')[0]\n    toy_patches = image_patch.find('toy')\n    if len(toy_patches) == 0:\n        return image_patch\n    for toy_patch in toy_patches:\n        if toy_patch.horizontal_center > baby_animal_patch.horizontal_center:\n            return toy_patch\n   return toy_patches[0]", "question": "Return an ImagePatch, what is the toy that is to the right of the baby animal?"},
"15": {"program": "\n# Return an ImagePatch, what is the large bird?\ndef execute_command(image) -> ImagePatch:\n    image_patch = ImagePatch(image)\n    large_bird_patch = image_patch.find('large bird')[0]\n    return large_bird_patch", "question": "Return an ImagePatch, what is the large bird?"},
"16": {"program": "\n# Return an ImagePatch, what is the woman standing?\ndef execute_command(image) -> ImagePatch:\n    image_patch = ImagePatch(image)\n    woman_patches = image_patch.find('woman')[0]\n    if len(woman_patches) == 0:\n        return image_patch\n    for woman_patch in woman_patches:\n        if woman_patch.simple_query(\"Is the woman standing?\") == 'yes':\n            return woman_patch\n    return woman_patches[0]", "question": "Return an ImagePatch, what is the woman standing?"},
"17": {"program": "\n# Return a str, what is the name of the device that is to the left of the pens?\ndef execute_command(image) -> str:\n    image_patch = ImagePatch(image)\n    pens_patch = image_patch.find('pens')[0]\n    device_patches = image_patch.find('device')\n    for device_patch in device_patches:\n        if device_patch.horizontal_center < pens_patch.horizontal_center:\n            return device_patch.simple_query(\"What is the name of this device?\")\n    return device_patches[0].simple_query(\"What is the name of this device?\")", "question": "Return a str, what is the name of the device that is to the left of the pens?"},
"18": {"program": "\n# Return a bool, Are there any small microwaves?\ndef execute_command(image) -> bool:\n    image_patch = ImagePatch(image)\n    small_microwaves_patches = image_patch.find(\"small microwave\")\n    if len(small_microwaves_patches) == 0:\n        return False\n    # recheck if each found one is indeed a small microwave\n    for small_microwaves_patch in small_microwaves_patches:\n        if small_microwaves_patch.simple_query(\"Is this a small microwave?\") == 'yes':\n            return True\n    return False", "question": "Return a bool, Are there any small microwaves?"},
"19": {"program": "\n# Return a bool, Is the standing giraffe tall?\ndef execute_command(image) -> bool:\n    image_patch = ImagePatch(image)\n    giraffe_patches = image_patch.find('giraffe')\n    for giraffe_patch in giraffe_patches:\n        if giraffe_patch.verify_property('giraffe', 'standing'):\n            if giraffe_patch.verify_property('giraffe', 'tall'):\n                return True\n    return False", "question": "Return a bool, Is the standing giraffe tall?"},
"20": {"program": "\n# Return a bool, Is the standing giraffe brown?\ndef execute_command(image) -> bool:\n    image_patch = ImagePatch(image)\n    giraffe_patches = image_patch.find('giraffe')\n    for giraffe_patch in giraffe_patches:\n        if giraffe_patch.verify_property('giraffe', 'standing'):\n            if giraffe_patch.verify_property('giraffe', 'brown'):\n                return True\n    return False", "question": "Return a bool, Is the standing giraffe brown?"}
}

